from typing import List, Optional, Dict, Any, Union, Literal
from pydantic import BaseModel, Field
from datetime import datetime


class HumanName(BaseModel):
    use: Optional[str] = Field(default="official", description="usual | official | temp | nickname | anonymous | old | maiden")
    family: Optional[str] = Field(default=None, description="Family name (often called 'Surname')")
    given: Optional[List[str]] = Field(default_factory=list, description="Given names (not always 'first'). Includes middle names")
    prefix: Optional[List[str]] = Field(default_factory=list, description="Parts that come before the name")
    suffix: Optional[List[str]] = Field(default_factory=list, description="Parts that come after the name")
    text: Optional[str] = Field(default=None, description="Text representation of the full name")


class Address(BaseModel):
    use: Optional[str] = Field(default="home", description="home | work | temp | old | billing - purpose of this address")
    type: Optional[str] = Field(default="both", description="postal | physical | both")
    text: Optional[str] = Field(default=None, description="Text representation of the address")
    line: Optional[List[str]] = Field(default_factory=list, description="Street name, number, direction & P.O. Box etc.")
    city: Optional[str] = Field(default=None, description="Name of city, town etc.")
    district: Optional[str] = Field(default=None, description="District name (aka county)")
    state: Optional[str] = Field(default=None, description="Sub-unit of country (abbreviations ok)")
    postalCode: Optional[str] = Field(default=None, description="Postal code for area")
    country: Optional[str] = Field(default="US", description="Country (e.g., can be ISO 3166 2 or 3 letter)")


class ContactPoint(BaseModel):
    system: Optional[str] = Field(default=None, description="phone | fax | email | pager | url | sms | other")
    value: Optional[str] = Field(default=None, description="The actual contact point details")
    use: Optional[str] = Field(default="home", description="home | work | temp | old | mobile")


class Patient(BaseModel):
    resourceType: Literal["Patient"] = Field(default="Patient")
    id: Optional[str] = Field(default=None, description="Logical id of this artifact")
    meta: Optional[Dict[str, Any]] = Field(default=None, description="Metadata about the resource")
    implicitRules: Optional[str] = Field(default=None, description="A set of rules under which this content was created")
    language: Optional[str] = Field(default=None, description="Language of the resource content")
    text: Optional[Dict[str, Any]] = Field(default=None, description="Text summary of the resource, for human interpretation")
    contained: Optional[List[Dict[str, Any]]] = Field(default_factory=list, description="Contained, inline Resources")
    extension: Optional[List[Dict[str, Any]]] = Field(default_factory=list, description="Additional content defined by implementations")
    modifierExtension: Optional[List[Dict[str, Any]]] = Field(default_factory=list, description="Extensions that cannot be ignored")
    identifier: Optional[List[Dict[str, Any]]] = Field(default_factory=list, description="An identifier for this patient")
    active: Optional[bool] = Field(default=True, description="Whether this patient's record is in active use")
    name: List[HumanName] = Field(default_factory=list, description="A name associated with the patient")
    telecom: Optional[List[ContactPoint]] = Field(default_factory=list, description="A contact detail for the individual")
    gender: Optional[str] = Field(default=None, description="male | female | other | unknown")
    birthDate: Optional[str] = Field(default=None, description="The date of birth for the individual")
    deceasedBoolean: Optional[bool] = Field(default=None, description="Indicates if the individual is deceased or not")
    deceasedDateTime: Optional[str] = Field(default=None, description="The date and time of death")
    address: Optional[List[Address]] = Field(default_factory=list, description="An address for the individual")
    maritalStatus: Optional[Dict[str, Any]] = Field(default=None, description="Marital (civil) status of a person")
    multipleBirthBoolean: Optional[bool] = Field(default=None, description="Whether patient is part of a multiple birth")
    multipleBirthInteger: Optional[int] = Field(default=None, description="Number of births in a multiple birth")
    photo: Optional[List[Dict[str, Any]]] = Field(default_factory=list, description="Image of the patient")
    contact: Optional[List[Dict[str, Any]]] = Field(default_factory=list, description="A contact party (e.g., guardian, partner, friend) for the patient")
    communication: Optional[List[Dict[str, Any]]] = Field(default_factory=list, description="A language which may be used to communicate with the patient about his or her health")
    generalPractitioner: Optional[List[Dict[str, Any]]] = Field(default_factory=list, description="Patient's nominated primary care provider")
    managingOrganization: Optional[Dict[str, Any]] = Field(default=None, description="Organization that is the custodian of the patient record")
    link: Optional[List[Dict[str, Any]]] = Field(default_factory=list, description="Link to another patient resource that concerns the same actual patient")


class Observation(BaseModel):
    resourceType: Literal["Observation"] = Field(default="Observation")
    id: Optional[str] = Field(default=None, description="Logical id of this artifact")
    meta: Optional[Dict[str, Any]] = Field(default=None, description="Metadata about the resource")
    implicitRules: Optional[str] = Field(default=None, description="A set of rules under which this content was created")
    language: Optional[str] = Field(default=None, description="Language of the resource content")
    text: Optional[Dict[str, Any]] = Field(default=None, description="Text summary of the resource, for human interpretation")
    contained: Optional[List[Dict[str, Any]]] = Field(default_factory=list, description="Contained, inline Resources")
    extension: Optional[List[Dict[str, Any]]] = Field(default_factory=list, description="Additional content defined by implementations")
    modifierExtension: Optional[List[Dict[str, Any]]] = Field(default_factory=list, description="Extensions that cannot be ignored")
    identifier: Optional[List[Dict[str, Any]]] = Field(default_factory=list, description="Business Identifier for observation")
    basedOn: Optional[List[Dict[str, Any]]] = Field(default_factory=list, description="Fulfills plan, proposal or order")
    partOf: Optional[List[Dict[str, Any]]] = Field(default_factory=list, description="Part of referenced event")
    status: str = Field(..., description="registered | preliminary | final | amended | corrected | cancelled | entered-in-error | unknown")
    category: Optional[List[Dict[str, Any]]] = Field(default_factory=list, description="Classification of type of observation")
    code: Dict[str, Any] = Field(..., description="Type of observation (code / type)")
    subject: Optional[Dict[str, Any]] = Field(default=None, description="Who and/or what this is about")
    focus: Optional[List[Dict[str, Any]]] = Field(default_factory=list, description="What the observation is about, when it is not about the subject of record")
    encounter: Optional[Dict[str, Any]] = Field(default=None, description="Healthcare event during which this observation is made")
    effectiveDateTime: Optional[str] = Field(default=None, description="Clinically relevant time/time-period for observation")
    effectivePeriod: Optional[Dict[str, Any]] = Field(default=None, description="Clinically relevant time/time-period for observation")
    effectiveTiming: Optional[Dict[str, Any]] = Field(default=None, description="Clinically relevant time/time-period for observation")
    effectiveInstant: Optional[str] = Field(default=None, description="Clinically relevant time/time-period for observation")
    issued: Optional[str] = Field(default=None, description="Date/Time this version was made available")
    performer: Optional[List[Dict[str, Any]]] = Field(default_factory=list, description="Who is responsible for the observation")
    valueQuantity: Optional[Dict[str, Any]] = Field(default=None, description="Actual result")
    valueCodeableConcept: Optional[Dict[str, Any]] = Field(default=None, description="Actual result")
    valueString: Optional[str] = Field(default=None, description="Actual result")
    valueBoolean: Optional[bool] = Field(default=None, description="Actual result")
    valueInteger: Optional[int] = Field(default=None, description="Actual result")
    valueRange: Optional[Dict[str, Any]] = Field(default=None, description="Actual result")
    valueRatio: Optional[Dict[str, Any]] = Field(default=None, description="Actual result")
    valueSampledData: Optional[Dict[str, Any]] = Field(default=None, description="Actual result")
    valueTime: Optional[str] = Field(default=None, description="Actual result")
    valueDateTime: Optional[str] = Field(default=None, description="Actual result")
    valuePeriod: Optional[Dict[str, Any]] = Field(default=None, description="Actual result")
    dataAbsentReason: Optional[Dict[str, Any]] = Field(default=None, description="Why the result is missing")
    interpretation: Optional[List[Dict[str, Any]]] = Field(default_factory=list, description="High, low, normal, etc.")
    note: Optional[List[Dict[str, Any]]] = Field(default_factory=list, description="Comments about the observation")
    bodySite: Optional[Dict[str, Any]] = Field(default=None, description="Observed body part")
    method: Optional[Dict[str, Any]] = Field(default=None, description="How it was done")
    specimen: Optional[Dict[str, Any]] = Field(default=None, description="Specimen used for this observation")
    device: Optional[Dict[str, Any]] = Field(default=None, description="(Measurement) Device")
    referenceRange: Optional[List[Dict[str, Any]]] = Field(default_factory=list, description="Provides guide for interpretation")
    hasMember: Optional[List[Dict[str, Any]]] = Field(default_factory=list, description="Related resource that belongs to the Observation group")
    derivedFrom: Optional[List[Dict[str, Any]]] = Field(default_factory=list, description="Related measurements the observation is made from")
    component: Optional[List[Dict[str, Any]]] = Field(default_factory=list, description="Component results")


class Encounter(BaseModel):
    resourceType: Literal["Encounter"] = Field(default="Encounter")
    id: Optional[str] = Field(default=None, description="Logical id of this artifact")
    meta: Optional[Dict[str, Any]] = Field(default=None, description="Metadata about the resource")
    implicitRules: Optional[str] = Field(default=None, description="A set of rules under which this content was created")
    language: Optional[str] = Field(default=None, description="Language of the resource content")
    text: Optional[Dict[str, Any]] = Field(default=None, description="Text summary of the resource, for human interpretation")
    contained: Optional[List[Dict[str, Any]]] = Field(default_factory=list, description="Contained, inline Resources")
    extension: Optional[List[Dict[str, Any]]] = Field(default_factory=list, description="Additional content defined by implementations")
    modifierExtension: Optional[List[Dict[str, Any]]] = Field(default_factory=list, description="Extensions that cannot be ignored")
    identifier: Optional[List[Dict[str, Any]]] = Field(default_factory=list, description="Identifier(s) by which this encounter is known")
    status: str = Field(..., description="planned | arrived | triaged | in-progress | onleave | finished | cancelled | entered-in-error | unknown")
    statusHistory: Optional[List[Dict[str, Any]]] = Field(default_factory=list, description="List of past encounter statuses")
    class_: Optional[Dict[str, Any]] = Field(default=None, alias="class", description="Classification of patient encounter")
    classHistory: Optional[List[Dict[str, Any]]] = Field(default_factory=list, description="List of past encounter classes")
    type: Optional[List[Dict[str, Any]]] = Field(default_factory=list, description="Specific type of encounter")
    serviceType: Optional[Dict[str, Any]] = Field(default=None, description="Specific type of service")
    priority: Optional[Dict[str, Any]] = Field(default=None, description="Indicates the urgency of the encounter")
    subject: Optional[Dict[str, Any]] = Field(default=None, description="The patient or group present at the encounter")
    episodeOfCare: Optional[List[Dict[str, Any]]] = Field(default_factory=list, description="Episode(s) of care that this encounter should be recorded against")
    basedOn: Optional[List[Dict[str, Any]]] = Field(default_factory=list, description="The request this encounter satisfies")
    participant: Optional[List[Dict[str, Any]]] = Field(default_factory=list, description="List of participants involved in the encounter")
    appointment: Optional[List[Dict[str, Any]]] = Field(default_factory=list, description="The appointment that scheduled this encounter")
    period: Optional[Dict[str, Any]] = Field(default=None, description="The start and end time of the encounter")
    length: Optional[Dict[str, Any]] = Field(default=None, description="Quantity of time the encounter lasted")
    reasonCode: Optional[List[Dict[str, Any]]] = Field(default_factory=list, description="Coded reason the encounter takes place")
    reasonReference: Optional[List[Dict[str, Any]]] = Field(default_factory=list, description="Reason the encounter takes place (reference)")
    diagnosis: Optional[List[Dict[str, Any]]] = Field(default_factory=list, description="The list of diagnosis relevant to this encounter")
    account: Optional[List[Dict[str, Any]]] = Field(default_factory=list, description="The set of accounts that may be used for billing for this Encounter")
    hospitalization: Optional[Dict[str, Any]] = Field(default=None, description="Details about the admission to a healthcare service")
    location: Optional[List[Dict[str, Any]]] = Field(default_factory=list, description="List of locations where the patient has been")
    serviceProvider: Optional[Dict[str, Any]] = Field(default=None, description="The organization (facility) responsible for this encounter")
    partOf: Optional[Dict[str, Any]] = Field(default=None, description="Another Encounter this encounter is a part of")


class PatientInfo(BaseModel):
    first_name: str = Field(..., description="Patient's first name")
    last_name: str = Field(..., description="Patient's last name")
    date_of_birth: str = Field(..., description="Date of birth in YYYY-MM-DD format")
    gender: str = Field(..., description="Gender: male, female, other, or unknown")
    address_line1: str = Field(..., description="Primary address line")
    address_line2: Optional[str] = Field(default=None, description="Secondary address line")
    city: str = Field(..., description="City")
    state: str = Field(..., description="State or province")
    postal_code: str = Field(..., description="Postal or ZIP code")
    country: str = Field(default="US", description="Country")
    phone: Optional[str] = Field(default=None, description="Phone number")
    email: Optional[str] = Field(default=None, description="Email address")


class SymptomAssessment(BaseModel):
    symptom: str = Field(..., description="Primary symptom description")
    severity: int = Field(..., ge=1, le=10, description="Severity on 1-10 scale")
    duration: str = Field(..., description="How long the symptom has been present")
    description: Optional[str] = Field(default=None, description="Detailed description of the symptom")
    onset: Optional[str] = Field(default=None, description="When and how the symptom started")
    aggravating_factors: Optional[List[str]] = Field(default_factory=list, description="Factors that make symptom worse")
    relieving_factors: Optional[List[str]] = Field(default_factory=list, description="Factors that relieve symptom")
    associated_symptoms: Optional[List[str]] = Field(default_factory=list, description="Additional symptoms")


class TriageResult(BaseModel):
    patient_id: str = Field(..., description="FHIR ID of the created patient")
    encounter_id: str = Field(..., description="FHIR ID of the created encounter")
    observation_ids: List[str] = Field(default_factory=list, description="FHIR IDs of created observations")
    triage_level: str = Field(..., description="Recommended triage level")
    recommendations: List[str] = Field(default_factory=list, description="Care recommendations")
    summary: str = Field(..., description="Summary of findings")
    next_steps: List[str] = Field(default_factory=list, description="Recommended next steps")